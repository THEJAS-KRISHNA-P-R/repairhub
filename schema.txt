-- Create the database (optional, as application.yml with createDatabaseIfNotExist=true can handle this)
CREATE DATABASE IF NOT EXISTS repair_hub_db;
USE repair_hub_db;

-- Users table: Stores user account information
CREATE TABLE users (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL, -- BCrypt hashed password
    bio TEXT,
    avatar_url VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Badges table: Stores available badges for gamification
CREATE TABLE badges (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    variant ENUM('DEFAULT', 'SECONDARY', 'OUTLINE') NOT NULL
);

-- UserBadges table: Maps users to earned badges (many-to-many)
CREATE TABLE user_badges (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    badge_id BIGINT NOT NULL,
    earned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (badge_id) REFERENCES badges(id) ON DELETE CASCADE,
    UNIQUE (user_id, badge_id) -- Prevent duplicate badge awards
);

-- RepairPosts table: Stores repair logs
CREATE TABLE repair_posts (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    item_name VARCHAR(255) NOT NULL,
    issue_description TEXT,
    repair_steps TEXT,
    success BOOLEAN DEFAULT FALSE,
    date DATE NOT NULL,
    images JSON, -- Store image paths as JSON array
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Comments table: Stores comments on repair posts, supports threading
CREATE TABLE comments (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    repair_post_id BIGINT NOT NULL,
    content TEXT NOT NULL,
    parent_id BIGINT, -- Self-reference for threaded comments
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (repair_post_id) REFERENCES repair_posts(id) ON DELETE CASCADE,
    FOREIGN KEY (parent_id) REFERENCES comments(id) ON DELETE SET NULL
);

-- Guides table: Stores repair guides/tutorials
CREATE TABLE guides (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    item_name VARCHAR(255) NOT NULL,
    guide_content TEXT NOT NULL,
    date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Sample Data
-- Users (passwords are BCrypt hashed placeholders; generate actual hashes with BCrypt)
INSERT INTO users (username, email, password, bio, avatar_url) VALUES
    ('testuser', 'test@example.com', '$2a$10$XURPShlN1qhi.f6u7eB.RO2b0pI.9YQ2ABnX2weaJ6e1TJ1o2.7iG', 'Repair enthusiast', 'https://via.placeholder.com/150'),
    ('john_doe', 'john@example.com', '$2a$10$XURPShlN1qhi.f6u7eB.RO2b0pI.9YQ2ABnX2weaJ6e1TJ1o2.7iG', 'Tech hobbyist', 'https://via.placeholder.com/150');

-- Badges
INSERT INTO badges (name, description, variant) VALUES
    ('First Repair', 'Created your first repair log', 'DEFAULT'),
    ('Contributor', 'Posted 5 repair logs', 'SECONDARY'),
    ('Helpful', 'Made 10 comments', 'OUTLINE'),
    ('Community Star', 'Posts received 50+ views/upvotes', 'DEFAULT'),
    ('Expert Fixer', 'Completed 20 successful repairs', 'SECONDARY');

-- UserBadges
INSERT INTO user_badges (user_id, badge_id, earned_at) VALUES
    (1, 1, NOW()),
    (1, 2, NOW());

-- RepairPosts
INSERT INTO repair_posts (user_id, item_name, issue_description, repair_steps, success, date, images) VALUES
    (1, 'Laptop - Dell Inspiron', 'Screen flickering', 'Replaced display cable', true, CURDATE(), '["/uploads/laptop1.jpg"]'),
    (2, 'iPhone 12', 'Battery drain', 'Replaced battery', false, CURDATE(), '["/uploads/phone1.jpg"]');

-- Comments
INSERT INTO comments (user_id, repair_post_id, content, date) VALUES
    (2, 1, 'Great fix! What cable did you use?', NOW()),
    (1, 1, 'Thanks! Used a standard LVDS cable.', NOW());

-- Guides
INSERT INTO guides (user_id, item_name, guide_content, date) VALUES
    (1, 'Phone Battery Replacement', 'Step 1: Remove back cover...\nStep 2: Disconnect old battery...', CURDATE()),
    (2, 'Laptop Screen Repair', 'Step 1: Power off device...\nStep 2: Remove bezel...', CURDATE());